@model IEnumerable<ArtistApplication.Domain.Domain.Playlist>

@{
    ViewData["Title"] = "My Liked Playlists";
}

<div class="container" style="max-width: 1000px;">
    <h2 class="text-center mb-4">Liked Playlists</h2>
    <h6 class="text-center mb-4">These are the playlists that you have liked!</h6>

    @if (Model != null && Model.Any())
    {
        <table class="table table-transparent custom-table-playlists border-dark">
            <thead>
                <tr>
                    <th class="border-dark" style="color:white"></th>
                    <th class="border-dark" style="color:white">Playlist</th>
                    <th class="border-dark" style="color:white"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var isLiked = ViewBag.LikedPlaylists != null && ((List<Guid>)ViewBag.LikedPlaylists).Contains(item.Id);

                    <tr>
                        <td>
                            @if (!string.IsNullOrEmpty(item?.PictureUrl))
                            {
                                var imageUrl = Url.Content(item.PictureUrl);
                                <img src="@imageUrl" alt="Playlist Picture" class="img-fluid image-margin" style="max-width: 50px; height: auto;" />
                            }
                            else
                            {
                                <p>No picture available.</p>
                            }
                        </td>

                        <td>
                            <div>
                                <a asp-asp-controller="Playlist" asp-action="Details" asp-route-id="@item.Id"><strong style="color:white">@item?.Name</strong></a>
                                <br />
                                <em style="color:white">@item?.Description</em>
                            </div>
                        </td>

                        <td>
                            <div class="dropdown">
                                <button class="btn dropdown-toggle custom-burger-icon" type="button" id="dropdownMenuButton-@item.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="burger-lines"></span>
                                    <span class="burger-lines"></span>
                                    <span class="burger-lines"></span>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-@item.Id">
                                    <li>
                                        @if (ViewBag.LikedPlaylists != null && ((List<Guid>)ViewBag.LikedPlaylists).Contains(item.Id))
                                        {
                                            @using (Html.BeginForm("Unlike", "Playlists", FormMethod.Post, new { @id = "unlike-form-" + item.Id }))
                                            {
                                                @Html.Hidden("playlistId", item.Id)
                                                <button type="submit" class="dropdown-item" onclick="handleUnlike('@item.Id'); return false;">Dislike</button>
                                            }
                                        }
                                        else
                                        {
                                            @using (Html.BeginForm("Like", "Playlists", FormMethod.Post, new { @id = "like-form-" + item.Id }))
                                            {
                                                @Html.Hidden("playlistId", item.Id)
                                                <button type="submit" class="dropdown-item" onclick="handleLike('@item.Id'); return false;">Like</button>
                                            }
                                        }
                                    </li>
                                    <li>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="dropdown-item">Edit</a>
                                    </li>
                                    <li>
                                        <a asp-action="Details" asp-route-id="@item.Id" class="dropdown-item">Details</a>
                                    </li>
                                    <li>
                                        @using (Html.BeginForm("Delete", "Playlists", FormMethod.Post, new { @id = "delete-form-" + item.Id }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.Hidden("playlistId", item.Id)
                                            <button type="submit" class="dropdown-item" onclick="return confirm('Are you sure you want to delete this item?');">Delete</button>
                                        }
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-left">You haven't liked any playlists yet.</p>
    }
</div>


@section Scripts {
    <script>
        function handleLike(playlistId) {
            var form = document.getElementById('like-form-' + playlistId);
            fetch(form.action, {
                method: form.method,
                body: new URLSearchParams(new FormData(form)),
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
            }).then(response => {
                if (response.ok) {
                    location.reload();
                }
            });
        }

        function handleUnlike(playlistId) {
            var form = document.getElementById('unlike-form-' + playlistId);
            fetch(form.action, {
                method: form.method,
                body: new URLSearchParams(new FormData(form)),
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
            }).then(response => {
                if (response.ok) {
                    location.reload();
                }
            });
        }
    </script>
}