@model IEnumerable<ArtistApplication.Domain.Domain.Artist>

@{
    ViewData["Title"] = "Index";
}

<div class="container container.lg" style="margin-top:50px">
    <h2 class="text-center mb-4">Artists</h2>
    <div class="text-center" style="width: 400px;margin: 0 auto;">
        <form asp-action="Index" method="get">
            <div class="input-group">
                <input type="text" name="searchString" class="form-control custom-input" placeholder="Search songs" value="@ViewBag.SearchString" />
                <button class="btn custom-btn" type="submit">Search</button>
            </div>
        </form>
    </div>

    <table class="table table-transparent custom-table-artists border-dark">
        <thead>
            <tr>
                <th class="border-dark" style="color:white">
                    
                </th>
                <th class="border-dark"  style="color:white"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id" style="color:white">
                            @item.Name
                        </a>
                    </td>
                    <td>
                        <div class="dropdown">
                            <button class="btn dropdown-toggle custom-burger-icon" type="button" id="dropdownMenuButton-@item.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="burger-lines"></span>
                                <span class="burger-lines"></span>
                                <span class="burger-lines"></span>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-@item.Id">
                                <li>
                                    @if (ViewBag.LikedArtists != null && ((List<Guid>)ViewBag.LikedArtists).Contains(item.Id))
                                    {
                                        @using (Html.BeginForm("Unlike", "Artists", FormMethod.Post, new { @id = "unlike-form-" + item.Id }))
                                        {
                                            @Html.Hidden("artistId", item.Id)
                                            <button type="submit" class="dropdown-item" onclick="handleUnlike('@item.Id'); return false;">Dislike</button>
                                        }
                                    }
                                    else
                                    {
                                        @using (Html.BeginForm("Like", "Artists", FormMethod.Post, new { @id = "like - form - " + item.Id }))
                                        {
                                            @Html.Hidden("artistId", item.Id)
                                            <button type="submit" class="dropdown-item" onclick="handleLike('@item.Id'); return false;">Like</button>
                                        }
                                    }
                                </li>
                                <li>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="dropdown-item">Edit</a>
                                </li>
                                <li>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="dropdown-item">Details</a>
                                </li>
                                <li>
                                    @using (Html.BeginForm("Delete", "Artists", FormMethod.Post, new { @id = "delete-form-" + item.Id }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("artistId", item.Id)
                                        <button type="submit" class="dropdown-item" onclick="return confirm('Are you sure you want to delete this item?');">Delete</button>
                                    }
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <p style="text-align: center; margin-top:20px;">
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>
</div>
@section Scripts {
    <script>
        function handleLike(artistId) {
            var form = document.getElementById('like-form-' + artistId);
            fetch(form.action, {
                method: form.method,
                body: new URLSearchParams(new FormData(form)),
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
            }).then(response => {
                if (response.ok) {
                    location.reload();
                }
            });
        }

        function handleUnlike(artistId) {
            var form = document.getElementById('unlike-form-' + artistId);
            fetch(form.action, {
                method: form.method,
                body: new URLSearchParams(new FormData(form)),
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
            }).then(response => {
                if (response.ok) {
                    location.reload();
                }
            });
        }
    </script>
}