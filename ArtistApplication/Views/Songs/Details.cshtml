@model ArtistApplication.Domain.ViewModel.SongDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card bg-transparent border-0 mb-4">
                <div class="card-body">
                    <h1 class="text-center">@Model.Song.Title</h1>

                    <hr />

                    <dl class="row">
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Song.Title)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Song.Title)
                        </dd>

                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Artist.Name)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Artist.Name)
                        </dd>

                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Genre.Name)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Genre.Name)
                        </dd>

                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Album.Title)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Album.Title)
                        </dd>

                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Song.Length)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Song.Length)
                        </dd>
                    </dl>

                    @if (!string.IsNullOrEmpty(Model.Song?.FileName))
                    {
                        var audioFileUrl = Url.Content($"~/uploads/{Model.Song.FileName}");

                        <div class="custom-audio-player" data-audio-url="@audioFileUrl">
                            <button class="play-pause-btn">
                                <i class="bi bi-play-fill"></i>
                            </button>
                            <input type="range" class="seek-bar" value="0" min="0" max="100" step="1">
                            <span class="current-time">0:00</span> / <span class="duration">0:00</span>
                            <input type="range" class="volume-bar" value="100" min="0" max="100" step="1">
                        </div>
                    }
                    else
                    {
                        <p>No audio file available.</p>
                    }
                </div>
            </div>

            <div class="text-center mt-4">
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Song.Id">Edit</a>
                <a class="btn btn-secondary ml-2" asp-action="Index">Back to List</a>
            </div>
        </div>
    </div>
</div>

